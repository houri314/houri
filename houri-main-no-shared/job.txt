From: Hourin
To: Com

We need to build shared libraries to link multiple C files together.
You move the source code of all the houric header files to their own C file, for example,
	houristr.h functions codes should be moved to houristr.c, so that the header files
	only contain the function protocols.
I have done the same for lowlevel header files, you can find the C file in include/lowlevel. I
	put everything in the same file because the lowlevel files are relatively smaller, compared
	to houric.
After you have done doing that for all the files in include/houric, also do the same for include/keyboard.
Then you can edit the Makefile, fixing the houriclib recipe (should be at line 29), so that it compiles
	the C files in include/houric/houri.c to lib/houric.so, include/lowlevel/lowlevel.c to lib/lowlevel.so,
	and include/keyboard/keyboard.c to lib/keyboard.so. Remember to compile them for x86 system. HouriOS is
	for x86 machines.
Next is you find a way to link kernel.o (hourios in Makefile, line 17) using the already compiled .so files.
If it links fine and hourios is runable, congrats. We have advanced a step further. Now we can finally make
	multiple C files for the kernel modules, making the kernel more modular.
While you are making that, I will be implementing more kernel stuff (without testing), such as memory (unsure),
	CPU interrupts, kernel calls (probably), a function to translate keycode to ASCII,
	and (hopefully) a shell.
Goodluck Com.

======================================

August 3rd 2022:
From: Hourin
To: everyone

I understood that not everyone in the development team could build a cross compiler, which is crucial to
	developing the OS. However, I won't let that slow down out process. Building a cross compiler
	is only needed for building shared libraries (required to link several files together to make the
	kernel binary), apart from that, not using shared libraries is probably still OK.
Thus, we need a new branch. I suppose that this branch will be called "nubs" or "normies" or something
	like that. Codes in this branch will have less features than in the main branch, however will
	not require the use of shared libraries, thus doesn't need a cross-compiler. This branch will
	be intended for people who want to contribute more features to HouriClib, or write a part of
	the documentation, but doesn't know how to build (or failed to build) a cross-compiler.
You job is easy. Just move all the codes in include/lowlevel/lowlevel.c and include/houric/*.c into their
	appropriate header files, then create a new branch and upload those to that branch. Note that you
	have to create a separate branch and upload to that branch. DO NOT UPLOAD TO THE MAIN BRANCH.
Happy hacking. People look forward to someone who completes the task.
PS: After you done the branch with the current code, sometimes someone will update the codes in that branch.
	You don't have to worry too much about that.



